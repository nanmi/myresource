
概念库 (C++20)：https://zh.cppreference.com/w/cpp/concepts
范围库 (C++20)：https://zh.cppreference.com/w/cpp/ranges


概念库提供基础语言概念的定义，它们能用于进行模板实参的编译时校验，以及基于类型属性的函数派发。这些概念在程序中提供等式推理的基础。

标准库中的大多数概念一同加上了语法及语义要求。通常，编译器只能检查语法要求。若在使用点语义要求未得到满足，则程序为谬构，不要求诊断。

定义于头文件 <concepts>
定义于命名空间 std
核心语言概念
same_as
  
(C++20)
 
指定一个类型与另一类型相同 
(概念)
derived_from
  
(C++20)
 
指定一个类型派生自另一类型 
(概念)
convertible_to
  
(C++20)
 
指定一个类型能隐式转换成另一类型 
(概念)
common_reference_with
  
(C++20)
 
指定两个类型共有一个公共引用类型 
(概念)
common_with
  
(C++20)
 
指定两个类型共有一个公共类型 
(概念)
integral
  
(C++20)
 
指定类型为整型类型 
(概念)
signed_integral
  
(C++20)
 
指定类型为有符号的整型类型 
(概念)
unsigned_integral
  
(C++20)
 
指定类型为无符号的整型类型 
(概念)
floating_point
  
(C++20)
 
指定类型为浮点类型 
(概念)
assignable_from
  
(C++20)
 
指定一个类型能从另一类型赋值 
(概念)
swappable
swappable_with
  
(C++20)
 
指定一个类型能进行交换，或两个类型能彼此交换 
(概念)
destructible
  
(C++20)
 
指定能销毁该类型的对象 
(概念)
constructible_from
  
(C++20)
 
指定该类型的变量能从一组实参类型进行构造，或绑定到一组实参类型 
(概念)
default_initializable
  
(C++20)
 
指定能默认构造一个类型的对象 
(概念)
move_constructible
  
(C++20)
 
指定能移动构造一个类型的对象 
(概念)
copy_constructible
  
(C++20)
 
指定能复制构造和移动构造一个类型的对象 
(概念)
比较概念
boolean
  
(C++20)
 
指定类型能用于布尔语境 
(概念)
equality_comparable
equality_comparable_with
  
(C++20)
 
指定运算符 == 为等价关系 
(概念)
totally_ordered
totally_ordered_with
  
(C++20)
 
指定比较运算符在该类型上产生全序 
(概念)
对象概念
movable
  
(C++20)
 
指定能移动及交换一个类型的对象 
(概念)
copyable
  
(C++20)
 
指定能复制、移动及交换一个类型的对象 
(概念)
semiregular
  
(C++20)
 
指定能赋值、移动、交换及默认构造一个类型的对象 
(概念)
regular
  
(C++20)
 
指定类型为正则，即它既为 semiregular 亦为 equality_comparable 
(概念)
可调用概念
invocable
regular_invocable
  
(C++20)
 
指定能以给定的一组实参类型调用的可调用类型 
(概念)
predicate
  
(C++20)
 
指定可调用类型为布尔谓词 
(概念)
relation
  
(C++20)
 
指定可调用类型为二元关系 
(概念)
equivalence_relation
  
(C++20)
 
指定 relation 施加等价关系 
(概念)
strict_weak_order
  
(C++20)
 
指定一个 relation 所强加的是严格弱序 
(概念)
另外的概念可在算法库与范围库中找到。